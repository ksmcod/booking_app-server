// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// model User {
//   email String @unique
// }
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String? // Null if using OAuth
  image     String? // Optional profile picture
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hotels   Hotel[]
  bookings Booking[]

  // OAuth Fields
  provider   String? // e.g., 'google', 'github', etc.
  providerId String? // OAuth provider's unique user ID
}

model Hotel {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  city          String
  country       String
  description   String
  type          String
  adultCount    Int
  childrenCount Int
  facilities    String[]
  price         Float
  starRating    Int
  imageUrls     String[]
  slug          String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]

  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Booking {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  hotelSlug     String
  checkinDate   DateTime
  checkoutDate  DateTime
  totalPrice    Float
  adultCount    Int
  childrenCount Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  hotel Hotel @relation(fields: [hotelSlug], references: [slug], onDelete: Cascade)
}
